 {% extends 'base.html.twig' %}

{% block title %}
  Générateur d'interview
{% endblock %}

{% block body %}
<section class="pt-5 pb-5">
<div class="container">
  <div class="sect-title">
    <div class="h1">Formulaire d'interview</div>
  </div>
  <form action="{{ path('export_txt') }}" method="POST" id="societe-form">
      <!-- Autres champs fixes -->
      <div class="form-groupe">
        <label>Nom:</label>
        <input type="text" placeholder="Nom" name="nom" required>
      </div>
      <div class="form-groupe">
        <label>Prénom:</label>
        <input type="text" placeholder="Prénom" name="prenom" required>
      </div>
      <div class="form-groupe">
        <label>Nom de la société:</label>
        <input type="text" placeholder="Nom de la société" name="societe" required>
      </div>
  
      <div class="form-groupe">
        <label>Adresse:</label>
        <input type="text" placeholder="Adresse" name="adresse" required>  
      </div>
  
      <div class="form-groupe">
        <label>Code postal:</label>
        <input type="text" placeholder="Code postal" name="code_postal" required>
      </div>
  
      <div class="form-groupe">
        <label>Commune:</label>
        <input type="text" placeholder="Commune" name="commune" required>
      </div>
  
      <div class="form-groupe">
        <label>Adresse Mail:</label>
        <input type="email" placeholder="contact@nomsociete.com" name="email" required>
      </div>
  
      <div class="form-groupe">
        <label>Numéro de téléphone:</label>
        <input type="tel" placeholder="03 00 00 00 00" name="telephone" required>
      </div>
  
      <div class="form-groupe">
        <label>Horaires d’ouverture (ex: Mo-Fr 09:00-17:00):</label>
        <input type="text" placeholder="Mo-Fr 09:00-17:00" name="horaires" required>
      </div>
  
      <div class="form-groupe">
        <label>URL souhaité:</label>
        <input type="url" name="url" placeholder="http://nomsociete.fr" required>
      </div>
  
      <hr>
  
      <!-- Groupe d'activités -->
      <div id="activites">
        <div class="title-form">Activités</div>
        <div class="activite">
          <input type="text" name="activites[][titre]" placeholder="Titre de l'activité" required>
        </div>
      </div>
      <button type="button" class="btn-2" onclick="ajouterActivite()">Ajouter une activité</button>
  
      <hr>


      <div id="mot-cle-container">
          <div class="title-form">Ajouter un mot clé :</div>
          <input type="text" placeholder="Votre nouveau mot clé" id="mot-cle-input">
          <input type="text" name="motCleLists" hidden id="mot-cle-list-input">
          <button type="button" class="btn-2" id="add-mot-cle">Ajouter</button>

          <ul id="mot-cle-list"></ul>
      </div>
      <hr>
  
      <!-- Groupe pages géographiques -->
      <div id="pages_geographiques">
        <div class="title-form">Pages Géographiques</div>
        <div class="commune-block">
          <input type="radio"  name="is_mcp" onclick="changeMCP(this)" value="" required class="check-box">
          <input type="text" name="pages_geo[communes][]" class="commune-input" placeholder="Commune" required autocomplete="off">
          <input type="hidden" name="pages_geo[codeinsee][]" class="code-insee-input">
          <select name="pages_geo[motcles][]"  class="mot-cle-select" required></select>
        </div>
      </div>
      <button type="button" class="btn-2" onclick="ajouterPageGeo()">Ajouter une page géographique</button>
      <hr>

      <br><br>
      <div class="text-right">
      <button type="submit" class="btn-1">Exporter en .txt</button>
    </div>
  </form>
  
  <script>

    const motsCles = new Set();
    const motCleInput = document.getElementById('mot-cle-input');
    const motCleList = document.getElementById('mot-cle-list');
    const motCleListInput = document.getElementById('mot-cle-list-input');
    const addMotCleBtn = document.getElementById('add-mot-cle');

    function updateMotCleUI() {
        motCleList.innerHTML = '';
        document.querySelectorAll('.mot-cle-select').forEach(select => {
            select.innerHTML = '';
            motsCles.forEach((mot,index) => {
                const selectedAttr = index === 0 ? true : false;
                const option = document.createElement('option');
                option.value = mot;
                option.selected =selectedAttr;
                option.textContent = mot;
                select.appendChild(option);
            });
        });

        motsCles.forEach(mot => {
            const li = document.createElement('li');
            li.textContent = mot;
            motCleList.appendChild(li);
        });
    }

    addMotCleBtn.addEventListener('click', () => {
        const mot = motCleInput.value.trim();
        if (mot && !motsCles.has(mot)) {
            motsCles.add(mot);
            updateMotCleUI();
            motCleInput.value = '';
            motCleListInput.value = [...motsCles].join(', ');
        }
    });

    let activiteIndex = 1;
    function ajouterActivite() {
      const container = document.getElementById('activites');
      const div = document.createElement('div');
      div.className = 'activite';
      div.innerHTML = `
        <input type="text" name="activites[${activiteIndex}][titre]" placeholder="Titre" required>
        <button type="button" onclick="removeLineAct(this)"><i class="fa fa-trash" ></i></button>
      `;
      container.appendChild(div);
      activiteIndex++;
      document.getElementById('sqlOutput').textContent = "sql";
    }


      let pageIndex = 1;
    function ajouterPageGeo() {
      const container = document.getElementById('pages_geographiques');
      const div = document.createElement('div');
      div.className = 'commune-block';
      div.dataset.index = pageIndex;
      div.innerHTML = `
          <input type="radio"  onclick="changeMCP(this)"  name="is_mcp" value="" class="is-mcp" required class="check-box">
          <input type="text" name="pages_geo[communes][]" class="commune-input" placeholder="Commune" required autocomplete="off">
          <input type="hidden" name="pages_geo[codeinsee][]" value="0" class="code-insee-input">
          <select name="pages_geo[motcles][]"  class="mot-cle-select" required></select>
          <button type="button" onclick="removeLineGeo(this)"><i class="fa fa-trash" ></i></button>
      `;
      container.appendChild(div);
      updateMotCleUI();
    }

    function removeLineAct(e) {
      e.closest('.activite').remove();
    }
    function removeLineGeo(e) {
      e.closest('.commune-block').remove();
    } 
    function changeMCP(e) {
      $com2 =  (e.closest(".commune-block").querySelector("select").value ? e.closest(".commune-block").querySelector("select").value : "");
      $com1 = (e.closest(".commune-block").querySelector(".commune-input").value ? e.closest(".commune-block").querySelector(".commune-input").value : "");
      $comf= $com2 + " " + $com1;
      e.value =  $comf;
    } 
  </script>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"></script>
  <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">

  <script>
      $(document).ready(function() {
            $(document).on('focus', '.commune-input', function() {
                const $input = $(this);

                if ($input.data('autocomplete-initialized')) return;
                $input.data('autocomplete-initialized', true);

                $input.autocomplete({
                source: "/autocomplete-communes",
                minLength: 2,
                select: function(event, ui) {
                    $input.val(ui.item.value);
                    $input.closest('.commune-block').find('.code-insee-input').val(ui.item.code_insee);
                    $input.closest('.commune-block').find('.is-mcp').val(ui.item.code_insee);
                    return false;
                }
                });
            });
        });
  </script>
</div>
</section>
{% endblock %}